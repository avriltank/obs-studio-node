name: 'CI Multiplatform Build'

on:
  push:
    paths-ignore:
      - '**.md'
    branches: [ "staging" ]
    tags:
      - '*'
  pull_request:
    paths-ignore:
      - '**.md'
    branches: [ "staging" ]
  workflow_dispatch:

env:
  InstallPath: "obs-studio-node"
  SLBUILDDIRECTORY: "streamlabs-build.app" # The .app extension is required to run macOS tests correctly.
  RELEASE_BUCKET: "obsstudionodes3.streamlabs.com"
  RuntimeURL: https://artifacts.electronjs.org/headers/dist
  RuntimeName: iojs
  ElectronVersion: 25.8.4
  SLGenerator: Visual Studio 17 2022
  SLDistributeDirectory: distribute
  SLFullDistributePath: "streamlabs-build.app/distribute" # The .app extension is required to run macOS tests correctly.
  LibOBSVersion: 29.1.3sl33
  PACKAGE_NAME: osn

jobs:
  win64:
    name: 'Windows 64-bit'
    runs-on: windows-latest
    strategy:
      matrix:
        ReleaseName: [release]
        include:
        - ReleaseName: release
          ReleaseConfig: RelWithDebInfo
    env:
      OS_TAG: "win64"
    steps:
      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash
      - name: Install dependencies
        run: |
          yarn install --immutable --immutable-cache --check-cache 
          yarn add electron@${{env.ElectronVersion}} -D
      - name: Configure obs-studio-node
        run: ./ci/configure-osn.cmd
        env:
          ReleaseName: ${{matrix.ReleaseName}}
          tagartifact: ${{ steps.get_version.outputs.VERSION }}
      - name: Build obs-studio-node
        run: cmake --build ${{env.SLBUILDDIRECTORY}} --target install --config ${{matrix.ReleaseConfig}}
      - name: Put version into package.json
        if: startsWith(github.ref, 'refs/tags/')
        run: node ci/bump-version.js "${{ steps.get_version.outputs.VERSION }}" "${{env.PACKAGE_PATH}}"
        env:
          PACKAGE_PATH: "${{env.SLFullDistributePath}}/${{env.InstallPath}}"
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            ${{env.SLBUILDDIRECTORY}}
            tests/
          key: ${{ runner.os }}-build-${{ matrix.ReleaseName }}-${{ github.sha }}
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.TARGET_ARTIFACT}}.tar.gz
          asset_name: ${{env.TARGET_ARTIFACT}}.tar.gz
          asset_content_type: application/gzip
